    @model CVOIS.Models.SuperAdmin.SuperAdminViewModel

@{
    Layout = "~/Views/Shared/_SuperAdminLayout.cshtml";


}

@* Ministry Modal  *@
<div class="modal fade" id="ministryModal" tabindex="-1" role="dialog" aria-labelledby="ministryLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <form id="ministryForm">
                <div class="modal-header">
                    <h5 class="modal-title" id="ministryModalLabel">Add New Ministry</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>

                <div class="modal-body">
                    <div class="form-row row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label asp-for="Ministry.Ministry_Name" class="control-label"></label>
                                <input asp-for="Ministry.Ministry_Name" class="form-control" id="Ministry_Ministry_Name" placeholder="Ministry Name" />
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label asp-for="Ministry.Min_Status" class="control-label"></label>
                                <select asp-for="Ministry.Min_Status" class="form-control" id="Ministry_Min_Status">
                                    <option value="">-- Select Status --</option>
                                    <option value="ACTIVE">ACTIVE</option>
                                    <option value="INACTIVE">INACTIVE</option>
                                </select>
                            </div>
                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label asp-for="Ministry.Ministry_Type" class="control-label"></label>
                                @Html.DropDownListFor(model => model.Ministry.Ministry_Type,
                                new SelectList(Model.MinistryType_ddl_List, "Value", "Text"),
                                "-Select-",
                                new { @class = "form-control", @id = "Ministry_Ministry_Type" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-success" id="btnSaveMinistry" onclick="SaveMinistry()">
                        Submit
                    </button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="resetModalForm()">
                        Close
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>


@* Ministry Table *@
@Html.Partial("_MinistryTable.cshtml")


@* ----------Script start from here---------*@

@* Save Ministry Data *@
<script>
    function SaveMinistry() {
        const ministry_name = $("#Ministry_Ministry_Name").val().trim();
        const ministry_status = $("#Ministry_Min_Status").val().trim();
        const ministry_type = $("#Ministry_Ministry_Type").val().trim();

        // Collect validation errors
        let errorMessage = "";

        if (!ministry_name && !ministry_status && !ministry_type) {
            errorMessage = "All fields are required.";
        } else if (!ministry_name) {
            errorMessage = "Please enter the Ministry Name.";
        } else if (!ministry_status) {
            errorMessage = "Please select the Ministry Status.";
        } else if (!ministry_type) {
            errorMessage = "Please select the Ministry Type.";
        }
        if (errorMessage) {
            Swal.fire({
                icon: 'warning',
                title: errorMessage,
                confirmButtonColor: '#d33'
            });
            return;
        }

        Swal.fire({
            title: "Do you want to save the record?",
            icon: "question",
            showDenyButton: true,
            showCancelButton: true,
            confirmButtonText: "Save",
            denyButtonText: `Don't save`
        }).then((result) => {
            if (result.isConfirmed) {

                $('#btnSaveMinistry').prop('disabled', true).text("Submitting...");

                $.ajax({
                    type: 'POST',
                    url: '/SuperAdmin/Ministry',
                    data: {
                        'Ministry.Ministry_Name': ministry_name,
                        'Ministry.Min_Status': ministry_status,
                        'Ministry.Ministry_Type': ministry_type
                    },
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: "Ministry added successfully",
                                confirmButtonColor: '#3085d6'
                            }).then(() => {
                                $('#ministryModal').modal('hide');
                                $('#ministryForm')[0].reset();
                                location.reload();
                            });
                        }
                        else if (response.duplicate_Ministry_message) {
                            Swal.fire({
                                icon: 'warning',
                                title: response.duplicate_Ministry_message,
                                confirmButtonColor: '#d33'
                            });
                        }
                        else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: response.error_Ministry_message,
                                confirmButtonColor: '#d33'
                            });
                        }
                    },
                    error: function (response) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Oops!',
                            text: 'Something went wrong. Please try again.',
                            confirmButtonColor: '#d33'
                        });
                    },
                    complete: function () {
                        $('#btnSaveMinistry').prop('disabled', false).text("Submit");
                    }
                });

            }
        });
    }
</script>

@* Delete Ministry Data Confirmation *@
<script>
    function confirmDelete(deleteUrl) {
        Swal.fire({
            title: 'Are you sure?',
            text: "This action cannot be undone!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = deleteUrl;
            }
        });
    }
</script>

@* Delete Ministry Data  *@
<script>
    $(document).ready(function () {
        var MinistrysuccessMessage = '@TempData["Delete_Ministry_Message"]';
        var MinistryerrorMessage = '@TempData["Failed_Ministry_Message"]';

        if (MinistrysuccessMessage) {
            Swal.fire({
                title: "Deleted!",
                text: MinistrysuccessMessage,
                icon: "success",
                confirmButtonText: "OK"
            });
        }

        if (MinistryerrorMessage) {
            Swal.fire({
                title: "Error!",
                text: MinistryerrorMessage,
                icon: "error",
                confirmButtonText: "OK"
            });
        }
    });
</script>

@* Reset Form *@
<script>
    function resetModalForm() {
        document.getElementById("ministryForm").reset();
    }
</script>




